#version: '3.8'

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql_db
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - medical_network
    volumes:
      - mssql_data:/var/opt/mssql
    command: >
      sh -c "
      /opt/mssql/bin/sqlservr & 
      until /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -C -Q 'SELECT 1' > /dev/null 2>&1; do
      echo '⏳ En attente du démarrage de SQL Server...';
      sleep 5;
      done &&
      /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -C -Q \"IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'MedicalDB') BEGIN CREATE DATABASE [MedicalDB]; END;\";
      wait
      "
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:sqlserver://db:1433;databaseName=MedicalDB;encrypt=false
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: YourStrong!Passw0rd
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src # Comptable linux
      - ${PWD}/backend/src:/app/src # Comptable windows
    depends_on:
      - db
    networks:
      - medical_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8080/api
    volumes:
      - ./frontend:/app
      - ${PWD}/frontend:/app  # Windows
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - medical_network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - db
    networks:
      - medical_network
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  medical_network:
    driver: bridge

volumes:
  mssql_data:
  grafana_data: